import redis
import json

class PredictionQueue:
    def __init__(self):
        self.redis_client = redis.StrictRedis(host='localhost', port=6379, db=0)
    
    def submit_task(self, user_message, session_id):
        """
        Submit a new prediction task to the queue
        """
        task = {
            'message': user_message,
            'session_id': session_id
        }
        
        # Push task to Redis queue
        self.redis_client.rpush("prediction_tasks", json.dumps(task))
        
    def get_results(self, session_id, timeout=30):
        """
        Generator that yields results as they become available
        """
        while True:
            # Wait for new result with timeout
            result = self.redis_client.blpop(session_id, timeout=timeout)
            
            if result is None:
                print("Timeout waiting for results")
                break
                
            _, token = result
            token = token.decode('utf-8')
            
            if token == "[END]":
                break
                
            yield token
